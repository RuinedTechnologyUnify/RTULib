plugins {
    id 'java'
    id 'io.freefair.lombok' version '8.3'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'xyz.jpenilla.run-paper' version '2.1.0'
}

group = 'com.github.ipecter.rtu'
version = '1.0.4'

ConfigurableFileTree libsImplementation = fileTree(dir: 'libs-implementation', include: ['*.jar'])

runServer {
    minecraftVersion("1.20.1")
}
subprojects {

    apply {
        plugin("java")
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(17))
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = "minecraft-libraries"
            url = "https://libraries.minecraft.net/"
        }
        maven {
            name = "spigotmc-repo"
            url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        maven {
            name = "nms-repo"
            url = "https://repo.codemc.io/repository/nms-local/"
        }
    }

    dependencies {
        compileOnly "org.spigotmc:spigot-api:1.20.2-R0.1-SNAPSHOT"
    }
}
repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://mvnrepository.com/artifact/org.projectlombok/lombok'
    }
    maven {
        url = 'https://repo.oraxen.com/releases'
    }
    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.17.1-R0.1-SNAPSHOT'

    compileOnly "net.kyori:adventure-platform-bukkit:4.3.2"
    compileOnly "net.kyori:adventure-text-minimessage:4.14.0"
    compileOnly 'com.google.code.gson:gson:2.10.1'
    compileOnly 'com.google.guava:guava:33.0.0-jre'
    compileOnly 'org.apache.commons:commons-lang3:3.14.0'

    implementation 'org.mongodb:mongodb-driver-sync:4.11.1'
    compileOnly 'org.quartz-scheduler:quartz:2.3.2'

    compileOnly 'me.clip:placeholderapi:2.11.2'
    compileOnly 'io.th0rgal:oraxen:1.168.0'
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.6.1'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    implementation project(path: ':NMS')
    implementation project(path: ':NMS_1_17_R1', configuration: 'reobf')
    implementation project(path: ':NMS_1_18_R1', configuration: 'reobf')
    implementation project(path: ':NMS_1_18_R2', configuration: 'reobf')
    implementation project(path: ':NMS_1_19_R1', configuration: 'reobf')
    implementation project(path: ':NMS_1_19_R2', configuration: 'reobf')
    implementation project(path: ':NMS_1_19_R3', configuration: 'reobf')
    implementation project(path: ':NMS_1_20_R1', configuration: 'reobf')
    implementation project(path: ':NMS_1_20_R2', configuration: 'reobf')
    implementation project(path: ':NMS_1_20_R3', configuration: 'reobf')
    implementation libsImplementation
}

shadowJar {
    setArchiveClassifier("")
    mkdir("$projectDir/builds")
    doLast {
        copy {
            from archiveFile.get().asFile
            into file("$projectDir/builds")
        }
    }
}

def targetJavaVersion = 17

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
project.tasks {
    copy {
        from libsDirectory
        into file("$projectDir/builds")
    }
    build {
        dependsOn shadowJar
    }
}
